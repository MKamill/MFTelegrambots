import datetime
import telebot
from PIL import Image, ImageDraw
import subprocess
import sqlite3 as lite

f = open(r'/data/data/com.termux/files/home/telegram/bot_config.txt', 'r')
Token = f.read()
bot = telebot.TeleBot(Token)


@bot.message_handler(commands=['test'])
def start_message(message):
    markup = telebot.types.InlineKeyboardMarkup()
    markup.add(telebot.types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å', callback_data='add'))
    markup.add(telebot.types.InlineKeyboardButton(text='–ù–∞–π—Ç–∏', callback_data='search'))
    bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ üëá", reply_markup=markup)


@bot.message_handler(content_types=["text"])
def search_photo(message):
    try:
        name_of_photo = message.text
        conn = lite.connect(r'/storage/emulated/0/telegram/documents/photos.db')
        cursor = conn.cursor()
        sql = "SELECT path FROM img WHERE name=?"
        cursor.execute(sql, [name_of_photo])
        path = cursor.fetchone()  # or use fetchone()
        out_img = Image.open(path)
        bot.send_photo(message.chat.id, out_img)
    except:
        bot.send_message(message.chat.id, '–ø—Ä–æ–±—É—é –∑–∞–Ω–æ–≤–æ')
        try:
            search_photo(message)
        except:
            bot.send_message(message.chat.id, '—Ä–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è –æ—à–∏–±–∫–∞')


@bot.callback_query_handler(func=lambda call: True)
def query_handler(call):
    bot.answer_callback_query(callback_query_id=call.id)
    answer = ''
    if call.data == 'add':
        answer = '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é üìù'
    elif call.data == 'search':
        answer = '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏—Å–∫–æ–º–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ üîé'
    bot.send_message(call.message.chat.id, answer)


@bot.message_handler(content_types=["text"])
def start_message(message):
    try:
        bot.send_message(message.chat.id, message.text)
    except:
        bot.send_message(message.chat.id, '–ø—Ä–æ–±—É—é –∑–∞–Ω–æ–≤–æ')
        try:
            start_message(message)
        except:
            bot.send_message(message.chat.id, '—Ä–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è –æ—à–∏–±–∫–∞')


"""–º–æ–¥—É–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ö–æ–¥—è—â–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""


@bot.message_handler(content_types=["photo"])
def incoming_photo(message):
    try:
        file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        caption = f'{message.from_user.last_name} | {message.from_user.first_name} | {message.from_user.username}'
        bot.send_photo(1361637547, downloaded_file, caption)

        """–∑–∞–¥–∞–µ—Ç—Å—è –∏–º—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é –∫ —Ñ–æ—Ç–æ + –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ 
        —Å —Ä–∞–∑—Ä—à–µ–Ω–∏–µ–º .jpg –≤ —Å–ª—É—á–∞–µ –Ω–∞–ª–∏—á–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è,
        –∏–Ω–∞—á–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å –ø–æ—Ç–µ—Ä—è–≤—à–µ–π—Å—è + –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏"""
        if message.caption is not None:
            picture_name = str(message.caption) + '_' + str(datetime.datetime.now()).replace(':', '-') + '.jpg'
        else:
            picture_name = 'lost image_' + str(datetime.datetime.now()).replace(':', '-') + '.jpg'

        """–ø—É—Ç—å –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ 4x"""
        src = r'/storage/emulated/0/telegram/documents/photos/' + picture_name

        """–æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ñ–∞–π–ª —Å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–º –ø—É—Ç–µ–º –≤ –∫–∞—á–µ—Å—Ç–≤–µ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
        –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –Ω–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"""
        with open(src, "wb") as new_file:
            new_file.write(downloaded_file)
            new_file.close()

        con = lite.connect(r'/storage/emulated/0/telegram/documents/photos.db')
        cur = con.cursor()
        cur.execute("INSERT INTO img VALUES (?,?)", (message.caption, src,))
        con.commit()

    except:
        bot.send_message(message.chat.id, '–ø—Ä–æ–±—É—é –∑–∞–Ω–æ–≤–æ')
        try:
            incoming_photo(message)
            bot.send_message(message.chat.id, '—Ñ–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ')
        except:
            bot.send_message(message.chat.id, '—Ä–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è –æ—à–∏–±–∫–∞')


while True:
    try:
        bot.polling(none_stop=True)
    except:
        subprocess.call(['./reboot.sh'])
